                    Завдання 10 Пагінація:

- На АРІ за посиланням http://owu.linkpc.net/carsAPI/v2/doc
  зробити аутентифікацію user, який вже існує з даними: username - user12_12, password - P@$$word1.
- Виводити по 10 машинок (машинки можна наповнити в постмані).

                                План виконання - продовження:
  - Змінимо модель даних і створимо IPaginatedPageModel і типізуємо page.
  - у CarsPage будуємо useState і useEffect для слідкування за пагінацією і передамо CarsComponent cars.
    Щскільки на цій компоненті є власні cars, то перезамо свої, а ці замінемо на items (має спрацювати)
  - Створимо компоненту для кнопок prev i next PaginationComponent, а якій зробимо одну функцію
    changePage('prev') з різними тригерами.
  - Змінимо модель даних і створимо IPaginatedPageModel та типізуємо page.
    У CarsPage створимо useState і useEffect для слідкування за пагінацією і передамо CarsComponent пропс cars. Оскільки у цій компоненті вже є власні cars, передамо наші дані, а ті замінимо на items (має спрацювати).
  -  Створимо компоненту для кнопок prev і next - PaginationComponent, у якій зробимо одну функцію changePage('prev') з
  різними тригерами.
  -   Винесемо логіку зміни сторінок до PaginationComponent, передаючи функцію setQuery та значення prev і next як пропси.
  -  Створимо компоненту CarComponent, яка відображатиме інформацію про конкретний автомобіль.
  -  Створимо компоненту CarsComponent, яка відображатиме список автомобілів, використовуючи CarComponent для кожного
  автомобіля.
  - Створимо компоненту FormComponent, яка відповідатиме за форму аутентифікації користувача, використовуючи
  react-hook-form для обробки даних форми.
  - Додамо сервіс аутентифікації (authService), який оброблятиме запити на аутентифікацію і оновлення токенів.